
DCryptoStrength.Title                              = Cryptography Strength
DCryptoStrength.jbLocalStrengthDetails.mnemonic    = P
DCryptoStrength.jbLocalStrengthDetails.text        = Policy Details
DCryptoStrength.jbLocalStrengthDetails.tooltip     = Display local policy details
DCryptoStrength.jbOK.text                          = OK
DCryptoStrength.jbUpgradeStrength.mnemonic         = U
DCryptoStrength.jbUpgradeStrength.text             = Upgrade Strength
DCryptoStrength.jbUpgradeStrength.tooltip          = Upgrade cryptography strength to unlimited
DCryptoStrength.jbUsExportStrengthDetails.mnemonic = D
DCryptoStrength.jbUsExportStrengthDetails.text     = Policy Details
DCryptoStrength.jbUsExportStrengthDetails.tooltip  = Display US export policy details
DCryptoStrength.jlLocalStrength.text               = Local Policy Strength:
DCryptoStrength.jlUsExportStrength.text            = US Export Policy Strength:
DCryptoStrength.jtfLocalStrength.tooltip           = Local policy cryptography strength ('Limited' or 'Unlimited')
DCryptoStrength.jtfUsExportStrength.tooltip        = US export policy cryptography strength ('Limited' or 'Unlimited')

DDistinguishedNameChooser.CountryCodeTwoChars.message     = Country Code must be two characters in length.
DDistinguishedNameChooser.ValueReqAtLeastOneField.message = A value is required for at least one of the fields.
DDistinguishedNameChooser.jbCancel.text                   = Cancel
DDistinguishedNameChooser.jbDefault.text                  = Default DN
DDistinguishedNameChooser.jbOK.text                       = OK
DDistinguishedNameChooser.jbReset.text                    = Reset

DKeyIdentifierChooser.jbCancel.text           = Cancel
DKeyIdentifierChooser.jbOK.text               = OK
DKeyIdentifierChooser.jlGenerationMethod.text = Generation Method:
DKeyIdentifierChooser.jrb160BitHash.text      = 160-bit Hash
DKeyIdentifierChooser.jrb160BitHash.tooltip   = SHA-1 hash of public key - see RFC 3280 for details
DKeyIdentifierChooser.jrb64BitHash.text       = 64-bit Hash
DKeyIdentifierChooser.jrb64BitHash.tooltip    = Partial SHA-1 hash of public key - see RFC 3280 for details

DProviderInfo.AliasesNode.text                         = Aliases
DProviderInfo.AttributeNode.text                       = {0} = {1}
DProviderInfo.AttributesNode.text                      = Attributes
DProviderInfo.ProviderNode.text                        = {0} v{1}
DProviderInfo.Service.AlgorithmParameterGenerator.text = Algorithm Parameter Generators
DProviderInfo.Service.AlgorithmParameters.text         = Algorithm Parameters
DProviderInfo.Service.CertPathBuilder.text             = Certificate Path Builders
DProviderInfo.Service.CertPathValidator.text           = Certificate Path Validators
DProviderInfo.Service.CertStore.text                   = Certificate Stores
DProviderInfo.Service.CertificateFactory.text          = Certificate Factories
DProviderInfo.Service.Cipher.text                      = Ciphers
DProviderInfo.Service.Configuration.text               = Configurations
DProviderInfo.Service.GssApiMechanism.text             = GSS API Mechanisms
DProviderInfo.Service.KeyAgreement.text                = Key Agreements
DProviderInfo.Service.KeyFactory.text                  = Key Factories
DProviderInfo.Service.KeyGenerator.text                = Key Generators
DProviderInfo.Service.KeyInfoFactory.text              = Key Information Factories
DProviderInfo.Service.KeyManagerFactory.text           = Key Manager Factories
DProviderInfo.Service.KeyPairGenerator.text            = Key Pair Generators
DProviderInfo.Service.KeyStore.text                    = Key Stores
DProviderInfo.Service.Mac.text                         = MACs
DProviderInfo.Service.MessageDigest.text               = Message Digests
DProviderInfo.Service.Policy.text                      = Policies
DProviderInfo.Service.SSLContext.text                  = SSL Contexts
DProviderInfo.Service.SaslClientFactory.text           = SASL Client Factories
DProviderInfo.Service.SaslServerFactory.text           = SASL Server Factories
DProviderInfo.Service.SecretKeyFactory.text            = Secret Key Factories
DProviderInfo.Service.SecureRandom.text                = Secure Random
DProviderInfo.Service.Signature.text                   = Signatures
DProviderInfo.Service.TerminalFactory.text             = Terminal Factories
DProviderInfo.Service.TransformService.text            = Transform Services
DProviderInfo.Service.TrustManagerFactory.text         = Trust Manager Factories
DProviderInfo.Service.XMLSignatureFactory.text         = XML Signature Factories
DProviderInfo.ServicesNode.text                        = Services
DProviderInfo.Title                                    = Security Provider Information
DProviderInfo.TopNode.text                             = Security Providers
DProviderInfo.jbCopy.mnemonic                          = C
DProviderInfo.jbCopy.text                              = Copy
DProviderInfo.jbCopy.tooltip                           = Copy security provider information to the clipboard
DProviderInfo.jbOK.text                                = OK

DUpgradeCryptoStrength.ManualInstructions.message        = <html><b>Manual Instructions to Upgrade Cryptography Strength</b><br><br>Press OK to exit KeyStore Explorer before proceeding with these instructions as it can lock existing policy files.<ol><li>Open the <b>Unlimited Strength Jurisdiction Policy ZIP</b> and extract the files <b>local_policy.jar</b> and <b>US_export_policy.jar</b>.</li><li>Locate the <b>Java Security Lib</b> folder on your computer: <b>{0}{1}lib{1}security</b>.</li><li>Make backup copies the existing <b>local_policy.jar</b> and <b>US_export_policy.jar</b> files present in the <b>Java Security Lib</b> folder.</li><li>Copy the extracted copies of the <b>local_policy.jar</b> and <b>US_export_policy.jar</b> files into the <b>Java Security Lib</b> folder.</li><li>Restart KeyStore Explorer for the above steps to take effect.</li></ol></html>
DUpgradeCryptoStrength.NoLaunchBrowser.message           = Could not launch web browser.  Policy download web address is ''{0}''.
DUpgradeCryptoStrength.NoUpdatePolicy.message            = Could not upgrade cryptography strength automatically.\nThis was probably due to insufficient privileges.\nManual upgrade instructions will now be displayed.
DUpgradeCryptoStrength.NotPolicyZip.message              = The supplied file is not a valid Unlimited Strength Jurisdiction Policy ZIP.
DUpgradeCryptoStrength.Title                             = Upgrade Cryptography Strength
DUpgradeCryptoStrength.Title.ChoosePolicyZip.Title       = Choose Unlimited Strength Jurisdiction Policy ZIP
DUpgradeCryptoStrength.Title.PolicyZipChooser.button     = Choose
DUpgradeCryptoStrength.jbBrowsePolicy.mnemonic           = B
DUpgradeCryptoStrength.jbBrowsePolicy.text               = Browse to Unlimited Strength Jurisdiction Policy ZIP
DUpgradeCryptoStrength.jbCancel.text                     = Cancel
DUpgradeCryptoStrength.jbDownloadPolicy.mnemonic         = D
DUpgradeCryptoStrength.jbDownloadPolicy.text             = Download Unlimited Strength Jurisdiction Policy ZIP
DUpgradeCryptoStrength.jbUpgrade.mnemonic                = U
DUpgradeCryptoStrength.jbUpgrade.text                    = Upgrade
DUpgradeCryptoStrength.jlDownloadPolicyInstructions.text = <html><b>1. Download Unlimited Strength Jurisdiction Policy</b><br><br>Press the button below to launch a web browser and download the<br>Unlimited Strength Jurisdiction Policy ZIP for your JRE from Oracle.</html>
DUpgradeCryptoStrength.jlDropPolicyInstructions.text     = <html><b>2. Install Unlimited Strength Jurisdiction Policy</b><br><br>Browse to the Unlimited Strength Jurisdiction Policy<br>ZIP or drop it onto the icon to the right. Finally press<br>the Upgrade button.</html>
DUpgradeCryptoStrength.jlUpgradeInstructions.text        = <html>To upgrade cryptography to unlimited strength carry out the following<br>steps:</html>

DViewCertificateFingerprint.Title                  = {0} Certificate Fingerprint
DViewCertificateFingerprint.jbCopy.mnemonic        = C
DViewCertificateFingerprint.jbCopy.text            = Copy
DViewCertificateFingerprint.jbCopy.tooltip         = Copy certificate fingerprint to the clipboard
DViewCertificateFingerprint.jbOK.text              = OK
DViewCertificateFingerprint.jtaFingerprint.tooltip = {0} Certificate fingerprint

DViewJcePolicy.jbCopy.mnemonic   = C
DViewJcePolicy.jbCopy.text       = Copy
DViewJcePolicy.jbCopy.tooltip    = Copy JCE policy to the clipboard
DViewJcePolicy.jbOK.text         = OK
DViewJcePolicy.jtaPolicy.tooltip = JCE policy definition

JCertificateFingerprint.jbViewCertificateFingerprint.image   = images/view_cert_fingerprint.png
JCertificateFingerprint.jbViewCertificateFingerprint.tooltip = View full certificate fingerprint
JCertificateFingerprint.jcbFingerprintAlg.tooltip            = Fingerprint algorithm
JCertificateFingerprint.jtfCertificateFingerprint.tooltip    = Certificate fingerprint

JDistinguishedName.jbClearDistinguishedName.image           = images/clear_dn.png
JDistinguishedName.jbClearDistinguishedName.tooltip         = Clear name
JDistinguishedName.jbViewEditDistinguishedName.Edit.tooltip = Edit name
JDistinguishedName.jbViewEditDistinguishedName.View.tooltip = View name
JDistinguishedName.jbViewEditDistinguishedName.image        = images/view_edit_dn.png

JKeyIdentifier.jbClearKeyIdentifier.image   = images/clear_key_id.png
JKeyIdentifier.jbClearKeyIdentifier.tooltip = Clear key identifier
JKeyIdentifier.jbEditKeyIdentifier.image    = images/edit_key_id.png
JKeyIdentifier.jbEditKeyIdentifier.tooltip  = Edit key identifier

JValidityPeriod.jbApply.text        = Apply
JValidityPeriod.jcbType.days.text   = Day(s)
JValidityPeriod.jcbType.months.text = Month(s)
JValidityPeriod.jcbType.weeks.text  = Week(s)
JValidityPeriod.jcbType.years.text  = Year(s)

ProviderTreeCellRend.Algorithm.image        = images/algorithm_node.png
ProviderTreeCellRend.Algorithm.tooltip      = Service algorithm
ProviderTreeCellRend.AlgorithmClass.image   = images/algorithm_class_node.png
ProviderTreeCellRend.AlgorithmClass.tooltip = Algorithm's implementing Java class
ProviderTreeCellRend.Alias.image            = images/alias_node.png
ProviderTreeCellRend.Alias.tooltip          = Alias of algorithm
ProviderTreeCellRend.Aliases.image          = images/aliases_node.png
ProviderTreeCellRend.Aliases.tooltip        = Aliases of algorithm
ProviderTreeCellRend.Attribute.image        = images/attribute_node.png
ProviderTreeCellRend.Attribute.tooltip      = Attribute of algorithm
ProviderTreeCellRend.Attributes.image       = images/attributes_node.png
ProviderTreeCellRend.Attributes.tooltip     = Attributes of algorithm
ProviderTreeCellRend.Description.image      = images/description_node.png
ProviderTreeCellRend.Description.tooltip    = Security provider's description
ProviderTreeCellRend.Provider.image         = images/provider_node.png
ProviderTreeCellRend.Provider.tooltip       = Security provider - name and version
ProviderTreeCellRend.ProviderClass.image    = images/provider_class_node.png
ProviderTreeCellRend.ProviderClass.tooltip  = Security provider's implementing Java class
ProviderTreeCellRend.Root.image             = images/root_node.png
ProviderTreeCellRend.Root.tooltip           = Installed security providers (in preference order)
ProviderTreeCellRend.Service.image          = images/service_node.png
ProviderTreeCellRend.Service.tooltip        = Service provided by security provider
ProviderTreeCellRend.Services.image         = images/services_node.png
ProviderTreeCellRend.Services.tooltip       = Services provided by security provider
