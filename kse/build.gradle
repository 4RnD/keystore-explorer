buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.2'
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.junit.platform.gradle.plugin'

repositories {
    mavenCentral()
}

configurations.all {
	resolutionStrategy {
		// fail eagerly on version conflict
    	failOnVersionConflict()
	    
	    // cache dynamic versions for 10 minutes
	    cacheDynamicVersionsFor 10*60, 'seconds'
	    
	    // don't cache changing modules at all
	    cacheChangingModulesFor 0, 'seconds'
	}
}

Properties props = new Properties()
props.load(project.rootProject.file('src/org/kse/version.properties').newDataInputStream())
version = props."KSE.Version"

ext {
	appName = props."KSE.Name"
	appVersion = props."KSE.Version"
	appSimpleName = props."KSE.SimpleName"
	appSimpleVersion = props."KSE.SimpleVersion"
	appUserModelId = props."KSE.AppUserModelId"
	distFileNamePrefix = appSimpleName + "-" + appSimpleVersion

	// Vendor details
	copyright = "Copyright 2004 - 2013 Wayne Grant, 2013 - 2017 Kai Kramer"
	vendor = "Wayne Grant, Kai Kramer"
	website = "keystore-explorer.org"

	// Main class (for manifest entry)
	mainClass = "org.kse.KSE"
}

// TODO should be 1.7 for app and 1.8 for unit tests
sourceCompatibility = 1.8
targetCompatibility = 1.8

sourceSets {
    main.java.srcDirs = ['src']
    main.resources.srcDirs = ['src']
    main.resources.excludes = [ '**/*.java', '**/Thumbs.db' ]
    test.java.srcDirs = ['test']
    test.resources.srcDirs = ['test']
    test.resources.excludes = [ '**/*.java' ]
}

dependencies {
	compile group: 'org.bouncycastle', name: 'bcpkix-jdk15on', version: '1.58'
	compile group: 'net.java.dev.jna', name: 'jna', version: '4.1.0'
	compile group: 'commons-io', name: 'commons-io', version: '2.6'
	compile group: 'javax.help', name: 'javahelp', version: '2.0.05'
	compile group: 'com.miglayout', name: 'miglayout-swing', version: '4.2' // TODO try 5.0
	
	// jars that are not available in a public repository
    compile fileTree(dir: 'lib', include: '*.jar')
    
    testCompile("org.junit.jupiter:junit-jupiter-api:5.0.2")
    testCompile("org.junit.jupiter:junit-jupiter-params:5.0.2")
    testRuntime("org.junit.jupiter:junit-jupiter-engine:5.0.2")
    
    // for eclipse
    testRuntime('org.junit.platform:junit-platform-launcher:1.0.2')
	
	// To avoid compiler warnings about @API annotations in JUnit code:
	testCompileOnly('org.apiguardian:apiguardian-api:1.0.0')
}

jar {
	version = null
    manifest {
        attributes('Built-JDK': System.getProperty('java.version'),
					'Implementation-Title': project.appName,
                   	'Implementation-Version': project.version,
                   	'Implementation-Vendor': project.vendor,
        			'Specification-Title': project.appName,
                   	'Specification-Version': project.version,
					'Specification-Vendor': project.vendor,
                   	'Main-Class': project.mainClass,
                   	'Class-Path': configurations.compile.collect { 'lib/' + it.getName() }.join(' '),
                   	'Built-Date': new Date().format("yyyy-MM-dd HH:mm:ss"),
                   	'SplashScreen-Image': 'org/kse/gui/images/splash.png',
                   	'Sealed': 'true'
                   	)
    }
}

task dist(type: Zip) {
    dependsOn jar
    
    //<available file="${libDir}/darcula.jar" property="darcula.present" />
	//<exclude name="license-darcula.txt" unless:true="${darcula.present}" />
	//<zipfileset file="${appExe}" prefix="${distFileNamePrefix}" />
	
    into('.') { 
        from jar.archivePath
	    from('res') {
		    include 'kse.sh'
		} 
	    from('res/readmes') {
		    include 'readme.txt'
		} 
	}
    into('lib') {
        from configurations.runtime
    }
    into('licenses') { 
	    from('res/licenses') {
		    include '**/*.txt'
		} 
	}
    into('icons') { 
	    from('res/icons') {
		    include '**/kse_*.png'
		} 
	}
	doLast {
        copy {
            from outputs.files
            into "dist"
        }
    }
}

compileTestJava {
	// unit tests make use of Java 8 features
	sourceCompatibility = 1.8
	targetCompatibility = 1.8
	options.compilerArgs += '-parameters'
}