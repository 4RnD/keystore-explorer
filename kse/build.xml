<?xml version="1.0" encoding="UTF-8"?>
<!--========================================================================
  Copyright 2004 - 2013 Wayne Grant
            2013 - 2017 Kai Kramer
  
  This file is part of KeyStore Explorer.
  
  KeyStore Explorer is free software: you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.
  
  KeyStore Explorer is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.
  
  You should have received a copy of the GNU General Public License
  along with KeyStore Explorer. If not, see <http://www.gnu.org/licenses/>.
========================================================================-->
<!--
	How to Use this Build Script:
	
	(1) Install Apache Ant 1.9+ and setup for use with JDK 1.7+.
	
	(2) Install Launch4j and set "launch4jInstallDir" property appropriately (Windows only).
	
	(3) Install NSIS and add its top-level directory to the path.
	
	(4) Add WinShell plugin to NSIS (http://nsis.sourceforge.net/WinShell_plug-in)
	
	(5) Run ant -projecthelp for a description of the various targets.
	
 -->

<!-- Build KeyStore Explorer -->
<project basedir="." default="package" name="KeyStore Explorer" 
	xmlns:if="ant:if" 
	xmlns:unless="ant:unless"
	xmlns:fx="javafx:com.sun.javafx.tools.ant">

	<!-- Application name and version -->
	<property file="src/org/kse/version.properties" />
	<property name="appName" value="${KSE.Name}" />
	<property name="appVersion" value="${KSE.Version}" />
	<property name="appSimpleName" value="${KSE.SimpleName}" />
	<property name="appSimpleVersion" value="${KSE.SimpleVersion}" />
	<property name="appUserModelId" value="${KSE.AppUserModelId}" />
	<property name="distFileNamePrefix" value="${appSimpleName}-${appSimpleVersion}" />

	<!-- Vendor details -->
	<property name="copyright" value="Copyright 2004 - 2013 Wayne Grant, 2013 - 2017 Kai Kramer" />
	<property name="vendor" value="Wayne Grant, Kai Kramer" />
	<property name="website" value="keystore-explorer.org" />

	<!-- Main class (for manifest entry) -->
	<property name="mainClass" value="org.kse.KSE" />

	<!-- Source code directory -->
	<property name="sourceDir" value="${basedir}/src" />

	<!-- Build directory (for class files) -->
	<property name="buildDir" value="${basedir}/build" />

	<!-- Distribution directory -->
	<property name="distDir" value="${basedir}/dist" />

	<!-- Libraries directory -->
	<property name="libDir" value="${basedir}/lib" />

	<!-- Application JAR -->
	<property name="appJarName" value="${appSimpleName}.jar" />
	<property name="appJar" value="${distDir}/${appJarName}" />

	<!-- Jars that are packaged together with KSE -->
	<path id="distClasspath">
		<fileset dir="${libDir}" id="libs">
			<include name="bcpkix.jar" />
			<include name="bcprov.jar" />
			<include name="commons-io.jar" />
			<include name="darcula.jar" />
			<include name="jgoodies-common.jar" />
			<include name="jgoodies-looks.jar" />
			<include name="jhall.jar" />
			<include name="jna.jar" />
			<include name="miglayout-core.jar" />
			<include name="miglayout-swing.jar" />
		</fileset>
	</path>

	<!-- Libraries list without .jar extension -->
	<property name="libs" refid="libs" />
	<loadresource property="libsNames">
		<propertyresource name="libs" />
		<filterchain>
			<tokenfilter>
				<filetokenizer />
				<replacestring from=";" to=" " />
				<replacestring from=".jar" to="" />
			</tokenfilter>
		</filterchain>
	</loadresource>

	<!-- Jars that are required for compiling KSE -->
	<path id="compileClasspath">
		<pathelement location="${buildDir}" />
		<path refid="distClasspath" />
	</path>

	<!-- Resource directories -->
	<property name="resDir" value="${basedir}/res" />
	<property name="iconsDir" value="${resDir}/icons" />
	<property name="licensesDir" value="${resDir}/licenses" />
	<property name="readmesDir" value="${resDir}/readmes" />
	<property name="schemasDir" value="${resDir}/schemas" />
	<property name="appShell" value="${resDir}/kse.sh" />
	<property name="startShell" value="${resDir}/${appSimpleName}" />
	<property name="desktopFile" value="${resDir}/${appSimpleName}.desktop" />
	<property name="startShellTemplate" value="${resDir}/kse.sh.in" />
	<property name="desktopFileTemplate" value="${resDir}/kse.desktop.in" />

	<!-- Manifest file -->
	<property name="mfFile" value="${basedir}/MANIFEST.MF" />

	<!-- Archive file excludes -->
	<property name="excludes" value="**/.DS_Store,**/Thumbs.db,**/.svn/" />

	<!-- Launch4j properties -->
	<property name="launch4jInstallDir" location="c:\\program files (x86)\\Launch4j" />
	<property name="appExe" value="${distDir}/${appSimpleName}.exe" />

	<!-- NSIS properties -->
	<property name="nsisDir" value="${basedir}/nsis" />
	<property name="nsisScript" value="${nsisDir}/kse.nsi" />

	<!-- Jar Bundle properties -->
	<property name="javaAppStub" value="${libDir}/JavaApplicationStub" />
	<property name="appBundleName" value="${appName}" />
	<property name="appBundleFile" value="${appBundleName}.app" />
	<property name="appBundle" value="${distDir}/${appBundleFile}" />

	<!-- Manual setup archive -->
	<property name="manualZip" value="${distDir}/${distFileNamePrefix}.zip" />

	<!-- Icons -->
	<property name="kseIco" value="${iconsDir}/kse.ico" />
	<property name="ksePng" value="${iconsDir}/kse.png" />
	<property name="kseIcns" value="${iconsDir}/kse.icns" />
	<property name="keystoreIcns" value="${iconsDir}/keystore.icns" />

	<!-- Java Help properties -->
	<property name="helpCfgDir" value="${basedir}/help" />
	<property name="helpCfg" value="${helpCfgDir}/help.cfg" />
	<property name="helpDir" value="${sourceDir}/org/kse/gui/help" />
	<property name="helpSearchIndex" value="searchindex" />
	<property name="helpSearchIndexDir" value="${buildDir}/org/kse/gui/help/${helpSearchIndex}" />

	<condition property="isMac">
		<os family="mac" />
	</condition>

	<condition property="isWindows">
		<os family="windows" />
	</condition>

	<target name="init" description="Initialize environment">
		<mkdir dir="${buildDir}" />
		<mkdir dir="${distDir}" />
	</target>


	<target name="compile" depends="init" description="Compile the Java source">
		<javac debug="on" includeantruntime="false" destdir="${buildDir}" source="1.7" target="1.7">
			<src path="${sourceDir}" />
			<classpath refid="compileClasspath" />
		</javac>
	</target>


	<target name="help" depends="compile" description="Create JavaHelp search index">

		<!-- Remove any old search index -->
		<delete dir="${helpSearchIndexDir}" />

		<!-- Create new search index -->
		<java dir="${helpDir}" classname="com.sun.java.help.search.Indexer" fork="true" failonerror="true">
			<arg value="-verbose" />
			<arg value="-c" />
			<arg value="${helpCfg}" />
			<arg value="-db" />
			<arg value="${helpSearchIndexDir}" />
			<classpath refid="compileClasspath" />
		</java>
	</target>

	
	<target name="jar" depends="compile, help">

		<tstamp>
			<format property="TODAY" pattern="yyyy-MM-dd HH:mm:ss" />
		</tstamp>

		<!-- KSE jar -->
		<manifestclasspath property="classPath" jarfile="${jar}" unless:set="classPath" maxParentLevels="1">
			<classpath refid="distClasspath" />
		</manifestclasspath>
		<manifest file="${mfFile}">
			<attribute name="Implementation-Title" value="${appName}" />
			<attribute name="Implementation-Version" value="${appVersion}" />
			<attribute name="Implementation-Vendor" value="${vendor}" />
			<attribute name="Specification-Title" value="${appName}" />
			<attribute name="Specification-Version" value="${appVersion}" />
			<attribute name="Specification-Vendor" value="${vendor}" />
			<attribute name="Main-Class" value="${mainClass}" />
			<attribute name="Class-Path" value="${classPath}" />
			<attribute name="Built-Date" value="${TODAY}" />
			<attribute name="SplashScreen-Image" value="org/kse/gui/images/splash.png" />
			<attribute name="Sealed" value="true" />
		</manifest>
		<jar destfile="${appJar}" manifest="${mfFile}">
			<fileset defaultexcludes="true" dir="${buildDir}" excludes="**/package.html,**/*.java,${excludes}" />
			<fileset dir="${sourceDir}">
				<include name="**/*.gif" />
				<include name="**/*.png" />
				<include name="**/*.xml" />
				<include name="**/*.html" />
				<include name="**/*.properties" />
				<!-- javahelp -->
				<include name="**/*.hs" />
				<include name="**/*.jhm" />
				<include name="**/contents" />
				<include name="**/*.css" />
				<exclude name="**/*.java" />
				<exclude name="**/package.html" />
			</fileset>
		</jar>
	</target>


	<target name="package" depends="launch4j" description="Create source and manual install ZIP files">

		<delete file="${mfFile}" />

		<!-- Create manual install ZIP -->
		<available file="${libDir}/darcula.jar" property="darcula.present" />
		<zip destfile="${manualZip}">
			<zipfileset file="${appJar}" prefix="${distFileNamePrefix}" />
			<zipfileset file="${appExe}" prefix="${distFileNamePrefix}" />
			<zipfileset file="${appShell}" prefix="${distFileNamePrefix}" filemode="755" />
			<zipfileset refid="libs" prefix="${distFileNamePrefix}/lib" />
			<zipfileset file="${readmesDir}/manual/readme.txt" prefix="${distFileNamePrefix}" />
			<zipfileset file="${iconsDir}/kse_*.png" prefix="${distFileNamePrefix}/icons" />
			<zipfileset defaultexcludes="false" dir="${licensesDir}" prefix="${distFileNamePrefix}/licences">
				<include name="*.txt" />
				<exclude name="${excludes}" />
				<!-- Include darcula license only if darcula.jar is included -->
				<exclude name="license-darcula.txt" unless:true="${darcula.present}" />
			</zipfileset>
		</zip>
	</target>


	<target name="resources" depends="init" description="Create GNU/Linux resources from templates">
		<filterset id="var-filters" begintoken="@" endtoken="@">
			<filter token="appName" value="${appName}" />
			<filter token="appSimpleName" value="${appSimpleName}" />
			<filter token="classPath" value="${libsNames}" />
			<filter token="mainClass" value="${mainClass}" />
		</filterset>
		<copy file="${desktopFileTemplate}" tofile="${desktopFile}">
			<filterset refid="var-filters"/>
		</copy>
		<copy file="${startShellTemplate}" tofile="${startShell}">
			<filterset refid="var-filters"/>
		</copy>
	</target>

	
	<target name="launch4j" depends="jar" description="Create Windows exe using Launch4j" if="isWindows">
		<taskdef name="launch4j" classname="net.sf.launch4j.ant.Launch4jTask">
			<classpath>
				<pathelement location="${launch4jInstallDir}/launch4j.jar" />
				<pathelement location="${launch4jInstallDir}/lib/xstream.jar" />
			</classpath>
		</taskdef>

		<launch4j>
			<config 
				headerType="gui" 
				jarpath="${appJarName}" 
				outfile="${appExe}" 
				dontWrapJar="true" 
				errTitle="${appName}" 
				stayAlive="false" 
				icon="${kseIco}">
				<jre minVersion="1.6.0" path="jre">
					<opt>-Dkse.exe=true</opt>
				</jre>
				<versionInfo 
					fileVersion="${appVersion}.0" 
					fileDescription="${appName}" 
					copyright="${copyright}" 
					internalName="${appSimpleName}" 
					originalFilename="${appSimpleName}.exe" 
					productName="${appName}" 
					productVersion="${appVersion}.0" 
					txtFileVersion="${appVersion}" 
					txtProductVersion="${appVersion}" />
			</config>
		</launch4j>
	</target>


	<target name="nsis" depends="launch4j" description="Create NSIS install and archive it">

		<!-- copy lib jars -->
		<copy todir="${distDir}/lib">
			<fileset refid="libs" />
		</copy>

		<!-- fill template with version info -->
		<copy file="${nsisScript}.template" tofile="${nsisScript}" overwrite="true" />
		<replace file="${nsisScript}" token="%KSE_VERSION%" value="${appVersion}" />
		<replace file="${nsisScript}" token="%KSE_SIMPLE_VERSION%" value="${appSimpleVersion}" />
		<replace file="${nsisScript}" token="%KSE_APP_USER_MODEL_ID%" value="${appUserModelId}" />

		<exec executable="makensis" dir="${nsisDir}">
			<arg value="${nsisScript}" />
		</exec>
	</target>

	
	<target name="appbundler" depends="jar" description="Create app bundle">

		<taskdef name="bundleapp" classpath="lib/appbundler-1.0ea.jar" classname="com.oracle.appbundler.AppBundlerTask" />

		<bundleapp outputdirectory="${distDir}" name="${appBundleName}" 
					displayname="${appBundleName}" 
					executableName="${appBundleName}" 
					identifier="org.kse.${appSimpleName}${appSimpleVersion}" 
					shortversion="${appSimpleVersion}" 
					version="${appVersion}" 
					icon="${kseIcns}" 
					mainclassname="${mainClass}" 
					copyright="${copyright}" 
					applicationCategory="public.app-category.developer-tools">

			<!--<runtime dir="${env.JAVA_HOME}"/>-->

			<classpath dir="${distDir}">
				<include name="${appJarName}" />
			</classpath>
			<classpath refid="libs" />

			<!-- TODO license files -->

			<arch name="x86_64" />
			<arch name="i386" />

			<bundledocument extensions="ks,jks,jceks,keystore,bks,uber,pfx,p12" icon="${keystoreIcns}" name="KeyStore" role="editor">
			</bundledocument>

			<!-- Workaround since the icon parameter for bundleapp doesn't work -->
			<option value="-Xdock:icon=Contents/Resources/${kseIcns}" />

			<option value="-Dapple.laf.useScreenMenuBar=true" />
			<option value="-Dcom.apple.macos.use-file-dialog-packages=true" />
			<option value="-Dcom.apple.macos.useScreenMenuBar=true" />
			<option value="-Dcom.apple.mrj.application.apple.menu.about.name=${appBundleName}" />
			<option value="-Dcom.apple.smallTabs=true" />
			<option value="-Dfile.encoding=UTF-8" />

			<option value="-Dkse.app=true" />
		</bundleapp>
	</target>

	
	<target name="signapp" depends="appbundler" description="Sign app bundle">
		<exec executable="codesign" dir="${distDir}">
			<arg value="-s" />
			<arg value="Kai Kramer" />
			<arg value="${distDir}/${appBundleName}.app" />
		</exec>
	</target>

	
	<target name="dmg" depends="signapp" description="Create DMG file">
		<exec executable="/usr/local/bin/dropdmg" dir="${distDir}">
			<arg value="-g" />
			<arg value="KSE" />
			<arg value="-b" />
			<arg value="${appSimpleName}-${appSimpleVersion}" />
			<arg value="${distDir}/${appBundleName}.app" />
		</exec>
	</target>

			
	<target name="clean" depends="init" description="Remove generated/compiled files">
		<delete dir="${buildDir}" />
		<delete dir="${distDir}" />
		<delete dir="${helpSearchIndexDir}" />
	</target>
</project>
